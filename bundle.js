(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){ var NUM_BEATS = 16; var BPM = 120; var getTick = require('./src/get_tick'); var Sampler = require('./src/sampler'); var Drum = require('./src/drum'); var Oscillator = require('openmusic-oscillator'); var Synth = require('./src/synth'); var UI = require('./src/UI'); var installMarkers = UI.installMarkers; var updateMarkers = UI.updateMarkers; var createSaveLoadButtons = UI.createSaveLoadButtons; var ac = new AudioContext(); var instruments = []; var drums = ['clap', 'cym', 'hat', 'snare', 'kick']; drums.forEach(function(drum){ var sampler = new Sampler(ac, 'samples/'+drum+'.wav'); sampler.connect(ac.destination); var drum = new Drum(sampler, drum); instruments.push(drum) }) var synths = ['triangle', 'sine']; synths.forEach(function(synth){ var oscillator = new Oscillator(ac); oscillator.type = synth; oscillator.connect(ac.destination); var synthesizer = new Synth(oscillator, synth); instruments.push(synthesizer); }) var position = 0; var interval; var tick = getTick(BPM); function run(tick){ interval = window.setInterval(function(){ updateMarkers(position, NUM_BEATS); instruments.forEach(function(instrument){ instrument.play(position, ac); }) position++; if(position >= 16){ position = 0; } }, tick); }; function createSlider(run){ var slider = document.createElement("div"); slider.setAttribute("class", "bpm-slider"); var bpmInfo = document.createElement("span"); bpmInfo.setAttribute("class", "bpm-info"); bpmInfo.textContent = BPM+'bpm'; var bpmSlider = document.createElement("input"); bpmSlider.setAttribute("type", "range"); bpmSlider.setAttribute("min", 20); bpmSlider.setAttribute("max", 500); bpmSlider.oninput = function updateBPM(e){ window.clearInterval(interval); bpm = e.target.valueAsNumber; bpmInfo.textContent = bpm + 'bpm'; tick = getTick(bpm); run(tick); }; slider.appendChild(bpmSlider); slider.appendChild(bpmInfo); document.body.appendChild(slider); } installMarkers(NUM_BEATS); createSlider(run); createSaveLoadButtons(instruments); run(tick); },{"./src/UI":6,"./src/drum":7,"./src/get_tick":8,"./src/sampler":9,"./src/synth":10,"openmusic-oscillator":3}],2:[function(require,module,exports){ module.exports = int2freq var scales = { major: [2, 2, 1, 2, 2, 2, 1], minor: [2, 1, 2, 2, 1, 2, 2], pentMaj: [2, 2, 3, 2, 3], pentMin: [3, 2, 2, 3, 2] } var notes = [ 'A0', 'A#0', 'B0', 'C1', 'C#1', 'D1', 'D#1', 'E1', 'F1', 'F#1', 'G1', 'G#1', 'A1', 'A#1', 'B1', 'C2', 'C#2', 'D2', 'D#2', 'E2', 'F2', 'F#2', 'G2', 'G#2', 'A2', 'A#2', 'B2', 'C3', 'C#3', 'D3', 'D#3', 'E3', 'F3', 'F#3', 'G3', 'G#3', 'A3', 'A#3', 'B3', 'C4', 'C#4', 'D4', 'D#4', 'E4', 'F4', 'F#4', 'G4', 'G#4', 'A4', 'A#4', 'B4', 'C5', 'C#5', 'D5', 'D#5', 'E5', 'F5', 'F#5', 'G5', 'G#5', 'A5', 'A#5', 'B5', 'C6', 'C#6', 'D6', 'D#6', 'E6', 'F6', 'F#6', 'G6', 'G#6', 'A6', 'A#6', 'B6', 'C7', 'C#7', 'D7', 'D#7', 'E7', 'F7', 'F#7', 'G7', 'G#7', 'A7', 'A#7', 'B7', 'C8' ] var str2freq = { 'A0': 27.5000, 'A#0': 29.1352, 'B0': 30.8677, 'C1': 32.7032, 'C#1': 34.6478, 'D1': 36.7081, 'D#1': 38.8909, 'E1': 41.2034, 'F1': 43.6535, 'F#1': 46.2493, 'G1': 48.9994, 'G#1': 51.9131, 'A1': 55.0000, 'A#1': 58.2705, 'B1': 61.7354, 'C2': 65.4064, 'C#2': 69.2957, 'D2': 73.4162, 'D#2': 77.7817, 'E2': 82.4069, 'F2': 87.3071, 'F#2': 92.4986, 'G2': 97.9989, 'G#2': 103.826, 'A2': 110.000, 'A#2': 116.541, 'B2': 123.471, 'C3': 130.813, 'C#3': 138.591, 'D3': 146.832, 'D#3': 155.563, 'E3': 164.814, 'F3': 174.614, 'F#3': 184.997, 'G3': 195.998, 'G#3': 207.652, 'A3': 220.000, 'A#3': 233.082, 'B3': 246.942, 'C4': 261.626, 'C#4': 277.183, 'D4': 293.665, 'D#4': 311.127, 'E4': 329.628, 'F4': 349.228, 'F#4': 369.994, 'G4': 391.995, 'G#4': 415.305, 'A4': 440.000, 'A#4': 466.164, 'B4': 493.883, 'C5': 523.251, 'C#5': 554.365, 'D5': 587.330, 'D#5': 622.254, 'E5': 659.255, 'F5': 698.456, 'F#5': 739.989, 'G5': 783.991, 'G#5': 830.609, 'A5': 880.000, 'A#5': 932.328, 'B5': 987.767, 'C6': 1046.50, 'C#6': 1108.73, 'D6': 1174.66, 'D#6': 1244.51, 'E6': 1318.51, 'F6': 1396.91, 'F#6': 1479.98, 'G6': 1567.98, 'G#6': 1661.22, 'A6': 1760.00, 'A#6': 1864.66, 'B6': 1975.53, 'C7': 2093.00, 'C#7': 2217.46, 'D7': 2349.32, 'D#7': 2489.02, 'E7': 2637.02, 'F7': 2793.83, 'F#7': 2959.96, 'G7': 3135.96, 'G#7': 3322.44, 'A7': 3520.00, 'A#7': 3729.31, 'B7': 3951.07, 'C8': 4186.01 } function int2freq(intNote, options){ var index, scale; if((index = notes.indexOf(options.tonic)) === -1) throw 'what is up with that tonic?' if(!(scale = scales[options.scale])) throw 'what is up with that scale?' while (Math.abs(intNote) > scale.length) scale = scale.concat(scale) if(intNote >= 0) for (var i = 0; i < intNote; index += scale[i], i+= 1 ){} else for (var j = -1; j >= intNote; index -= scale[scale.length + j], j-= 1){} return str2freq[notes[index]] } },{}],3:[function(require,module,exports){ (function() { var DCBias = require('openmusic-dcbias'); function Oscillator(context) { var node = context.createGain(); var oscillator; var frequencySignal; var properties = {}; frequencySignal = DCBias(context); node.frequency = frequencySignal.gain; node.frequency.setValueAtTime(440, context.currentTime); ['type'].forEach(function(name) { Object.defineProperty(node, name, makePropertyGetterSetter(name)); }); node.start = function(when) { deinitialiseOscillator(); initialiseOscillator(); when = when !== undefined ? when : context.currentTime; oscillator.start(when); }; node.stop = function(when) { oscillator.stop(when); }; node.cancelScheduledEvents = function(when) { // automated params: node.frequency.cancelScheduledEvents(when); }; return node; // ~~~ function initialiseOscillator() { oscillator = context.createOscillator(); oscillator.addEventListener('ended', onEnded); oscillator.connect(node); Object.keys(properties).forEach(function(name) { oscillator[name] = properties[name]; }); oscillator.frequency.setValueAtTime(0, context.currentTime); frequencySignal.connect(oscillator.frequency); } function deinitialiseOscillator() { if(oscillator) { oscillator.removeEventListener('ended', onEnded); oscillator.disconnect(node); frequencySignal.disconnect(oscillator.frequency); oscillator = null; } } function onEnded(e) { deinitialiseOscillator(); } function makePropertyGetterSetter(property) { return { get: function() { return getProperty(property); }, set: function(v) { setProperty(property, v); }, enumerable: true }; } function getProperty(name) { return properties[name]; } function setProperty(name, value) { properties[name] = value; if(oscillator) { oscillator[name] = value; } } } // if(typeof module !== 'undefined' && module.exports) { module.exports = Oscillator; } else { this.Oscillator = Oscillator; } }).call(this); },{"openmusic-dcbias":4}],4:[function(require,module,exports){ (function() { function DCBias(context) { var output = context.createGain(); var bufferSource = context.createBufferSource(); var buffer = context.createBuffer(1, 1, context.sampleRate); buffer.getChannelData(0)[0] = 1.0; bufferSource.buffer = buffer; bufferSource.loop = true; bufferSource.connect(output); bufferSource.start(0); return output; } // if(typeof module !== 'undefined' && module.exports) { module.exports = DCBias; } else { this.DCBias = DCBias; } }).call(this); },{}],5:[function(require,module,exports){ function SamplePlayer(context) { var node = context.createGain(); var bufferSource; var bufferSourceProperties = {}; ['buffer', 'loop', 'loopStart', 'loopEnd'].forEach(function(name) { Object.defineProperty(node, name, makeBufferSourceGetterSetter(name)); }); // TODO: playbackRate which needs to be an AudioParam node.start = function(when, offset, duration) { // console.log('start', 'when', when, 'offset', offset, 'duration', duration); var buffer = bufferSourceProperties['buffer']; if(!buffer) { console.info('no buffer to play so byeee'); return; } when = when !== undefined ? when : 0; offset = offset !== undefined ? offset : 0; // TODO This is mega ugly but urgh what is going on urgh // if I just pass 'undefined' as duration Chrome doesn't play anything if(window.webkitAudioContext) { console.log('correcting for chrome aghh'); var sampleLength = buffer.length; duration = duration !== undefined ? duration : sampleLength - offset; } // Disconnect if existing, remove events listeners if(bufferSource) { bufferSource.removeEventListener('ended', onEnded); bufferSource.disconnect(node); bufferSource = null; } initialiseBufferSource(); bufferSource.start(when, offset, duration); }; node.stop = function(when) { bufferSource.stop(when); }; node.cancelScheduledEvents = function(when) { // TODO: when there is automation }; function initialiseBufferSource() { bufferSource = context.createBufferSource(); bufferSource.addEventListener('ended', onEnded); bufferSource.connect(node); Object.keys(bufferSourceProperties).forEach(function(name) { bufferSource[name] = bufferSourceProperties[name]; }); } function onEnded(e) { var t = e.target; t.disconnect(node); initialiseBufferSource(); } function makeBufferSourceGetterSetter(property) { return { get: function() { return getBufferSourceProperty(property); }, set: function(v) { setBufferSourceProperty(property, v); }, enumerable: true }; } function getBufferSourceProperty(name) { return bufferSourceProperties[name]; } function setBufferSourceProperty(name, value) { bufferSourceProperties[name] = value; if(bufferSource) { bufferSource[name] = value; } } return node; } module.exports = SamplePlayer; },{}],6:[function(require,module,exports){ function installMarkers(num){ var markerRow = document.createElement("div") markerRow.setAttribute("class", "beat-markers"); for(var i = 0; i < num; i++){ var marker = document.createElement("div"); marker.setAttribute("class", "marker") marker.setAttribute("data-index", i); markerRow.appendChild(marker); } document.body.appendChild(markerRow); var clearFix = document.createElement("div"); clearFix.setAttribute("class", "cf"); document.body.appendChild(clearFix); }; function updateMarkers(position, num){ lastPosition = position - 1; if(lastPosition < 0){ lastPosition = num - 1; } document.querySelector('.marker[data-index="'+lastPosition+'"]').classList.remove('active'); document.querySelector('.marker[data-index="'+position+'"]').classList.add('active'); } function createSaveLoadButtons(instruments){ var saveBtn = document.createElement("button"); saveBtn.textContent = "save all"; saveBtn.addEventListener("click", function(){ instruments.forEach(function(instrument){ instrument.saveRow(); }) }) document.body.appendChild(saveBtn); var loadBtn = document.createElement("button"); loadBtn.textContent = "load all"; loadBtn.addEventListener("click", function(){ instruments.forEach(function(instrument){ instrument.loadRow(); }) }) document.body.appendChild(loadBtn); } module.exports = { installMarkers: installMarkers, updateMarkers: updateMarkers, createSaveLoadButtons: createSaveLoadButtons } },{}],7:[function(require,module,exports){ var Drum = function(sampler, name){ this.sampler = sampler; this.name = name; this.probs = Array(16); this.installRow(); } Drum.prototype.play = function(pos){ if(Math.random() < this.probs[pos]){ this.sampler.start(); } } Drum.prototype.installRow = function(){ var that = this; var drum = document.createElement("div"); drum.setAttribute("class", this.name); for(var i = 0; i < this.probs.length; i++){ var cell = document.createElement("input"); cell.setAttribute("type", "text") cell.setAttribute("class", "prob") cell.setAttribute("data-index", i); cell.addEventListener("keyup", function updateProbz(e){ that.probs[~~e.target.dataset.index] = parseFloat(e.target.value); }); drum.appendChild(cell); } var label = document.createElement("span"); label.setAttribute("class", "label") label.textContent = this.name; drum.appendChild(label); var saveBtn = document.createElement("button"); saveBtn.textContent = "save"; saveBtn.addEventListener("click", function(){ that.saveRow(); }) drum.appendChild(saveBtn); var loadBtn = document.createElement("button"); loadBtn.textContent = "load"; loadBtn.addEventListener("click", function(){ that.loadRow(); }) drum.appendChild(loadBtn); document.body.appendChild(drum); } Drum.prototype.loadRow = function(){ var that = this; var noteString = localStorage.getItem(this.name); if(!noteString) return; this.probs = noteString.split(","); this.probs.forEach(function(val, i){ if(!isNaN(val)){ document.querySelector('.'+that.name+' input[data-index="'+i+'"]').value = val; } }); } Drum.prototype.saveRow = function(){ localStorage.setItem(this.name, this.probs.join(",")); } module.exports = Drum; },{}],8:[function(require,module,exports){ module.exports = function(bpm){ return (60 bundle.js gh-pages_deploy.sh index.html main.css node_modules samples 1000) / bpm; } },{}],9:[function(require,module,exports){ var SamplePlayer = require('openmusic-sample-player'); module.exports = function(ac, path){ var player = SamplePlayer(ac); var request = new XMLHttpRequest(); request.open('GET', path, true); request.responseType = 'arraybuffer'; request.onload = function() { ac.decodeAudioData(request.response, onBufferLoaded, onBufferLoadError); }; request.send(); function onBufferLoaded(buffer) { player.buffer = buffer; } function onBufferLoadError(err) { console.error('oh no', err); } return player; } },{"openmusic-sample-player":5}],10:[function(require,module,exports){ var int2freq = require("int2freq"); var Synth = function(oscillator, name){ this.oscillator = oscillator; this.name = name; this.probs = Array(16); this.notes = Array(16); this.playing = false; this.installRow(); } Synth.prototype.play = function(pos, ac){ if(Math.random() < this.probs[pos]){ var noteInt = this.notes[pos][~~(Math.random() bundle.js gh-pages_deploy.sh index.html main.css node_modules samples this.notes[pos].length)] if(!noteInt) noteInt = 0; var freq = int2freq(~~noteInt, {tonic: 'C3', scale: 'major'}); this.oscillator.frequency.setValueAtTime(freq, ac.currentTime); this.oscillator.start(); this.playing = true; } else { if(this.playing) this.oscillator.stop(ac.currentTime); this.playing = false } } Synth.prototype.installRow = function(){ var that = this; var synth = document.createElement("div"); synth.setAttribute("class", this.name); var synthProbs = document.createElement("div"); synthProbs.setAttribute("class", "synth-probs"); for(var i = 0; i < this.probs.length; i++){ var cell = document.createElement("input"); cell.setAttribute("type", "text") cell.setAttribute("class", "prob") cell.setAttribute("data-index", i); cell.addEventListener("keyup", function updateProbz(e){ that.probs[~~e.target.dataset.index] = parseFloat(e.target.value); }); synthProbs.appendChild(cell); } var clearFix = document.createElement("div"); clearFix.setAttribute("class", "cf"); synthProbs.appendChild(clearFix); for(var i = 0; i < this.probs.length; i++){ var cell = document.createElement("input"); cell.setAttribute("type", "text") cell.setAttribute("class", "notes") cell.setAttribute("data-index", i); cell.addEventListener("keyup", function updateProbz(e){ that.notes[~~e.target.dataset.index] = e.target.value.split(","); }); synthProbs.appendChild(cell); } synth.appendChild(synthProbs) var label = document.createElement("span"); label.setAttribute("class", "label") label.textContent = this.name; synth.appendChild(label); var saveBtn = document.createElement("button"); saveBtn.textContent = "save"; saveBtn.addEventListener("click", function(){ that.saveRow(); }) synth.appendChild(saveBtn); var loadBtn = document.createElement("button"); loadBtn.textContent = "load"; loadBtn.addEventListener("click", function(){ that.loadRow(); }) synth.appendChild(loadBtn); document.body.appendChild(synth); } Synth.prototype.saveRow = function(position){ localStorage.setItem(this.name+"-probs", this.probs.join(",")); localStorage.setItem(this.name+"-notes", this.notes.join("|")); } Synth.prototype.loadRow = function(position){ var that = this; var probString = localStorage.getItem(this.name+"-probs"); if(!probString) return; this.probs = probString.split(","); this.probs.forEach(function(val, i){ document.querySelector('.'+that.name+' input[data-index="'+i+'"].prob').value = val; }); var notesString = localStorage.getItem(this.name+"-notes"); if(!notesString) return; this.notes = notesString.split("|").map(function(cell){ return cell.split(","); }); this.notes.forEach(function(val, i){ document.querySelector('.'+that.name+' input[data-index="'+i+'"].notes').value = val.join(","); }); } module.exports = Synth; },{"int2freq":2}]},{},[1]) //# sourceMappingURL=data:application/json;base64,
